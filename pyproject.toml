[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "freescout-llm"
version = "1.0.0"
description = "FreeScout LLM Integration - AI-powered email suggestions using RAG"
authors = [
    { name = "FreeScout LLM Integration Team", email = "admin@example.com" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
keywords = ["freescout", "llm", "rag", "ai", "email", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications :: Email",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.0",
    "ollama>=0.1.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "langchain-ollama>=0.1.0",
    "langchain-text-splitters>=0.0.1",
    "pypdf>=4.0.0",
    "numpy>=1.24.0",
    "tqdm>=4.65.0",
    "unstructured[md]>=0.12.0",
    "flask>=2.3.0",
    "scrapy>=2.11.0",
    "markdownify>=0.11.0",
    "sqlite-vec>=0.1.0",
    "langchain-openai>=0.3.33",
    "bleach>=6.0.0",
    "mistune>=3.1.4",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "pylint>=3.0.0",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/example/freescout-llm"
Repository = "https://github.com/example/freescout-llm"
Issues = "https://github.com/example/freescout-llm/issues"

[project.scripts]
freescout-llm = "freescout_llm.main:main"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pylint configuration
[tool.pylint]
max-line-length = 88
disable = [
    "C0103",  # Invalid name
    "C0114",  # Missing module docstring
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
    "W0613",  # Unused argument
]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "line-too-long",
]

# mypy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ollama.*",
    "langchain.*",
    "langchain_community.*",
    "langchain_ollama.*",
    "sqlite_vec.*",
    "scrapy.*",
    "unstructured.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["freescout_llm"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
